CFLAGS=-Wall -O2
BLASFLAGS=-L/usr/lib64/atlas -llapack -lcblas -latlas
BLASFLAGS64=-L/usr/lib64/atlas -llapack -lcblas -latlas
LINKFLAGS=-lm -lpthread
ZLIB=zlib-1.2.7/libz.a
ZLIB64=zlib-1.2.7/libz-64.a
ARCH64=-arch x86_64

UNAME := $(shell uname)
ifeq ($(UNAME), Darwin)
BLASFLAGS=-framework Accelerate
BLASFLAGS64=-framework Accelerate
LINKFLAGS=
ZLIB=zlib-1.2.7/libz.a
ZLIB64=zlib-1.2.7/libz-64.a
else
ifeq ($(UNAME), MINGW32_NT-6.0)
ARCH64=
BLASFLAGS=-Wl,-Bstatic -L. lapack/liblapack.a -L. lapack/librefblas.a
BLASFLAGS64=-Wl,-Bstatic -L. lapack/liblapack-64.a -L. lapack/librefblas-64.a
LINKFLAGS=-lm -static-libgcc
ZLIB=zlib-1.2.7/libz.a
ZLIB64=zlib-1.2.7/libz-64.a
endif
endif

SRC = wdist.c wdist_assoc.c wdist_calc.c wdist_common.c wdist_data.c wdist_dosage.c wdist_stats.c SFMT.c dcdflib.c pigz.c yarn.c
OBJ = wdist.o wdist_assoc.o wdist_calc.o wdist_common.o wdist_data.o wdist_dosage.o wdist_stats.o SFMT.o dcdflib.o pigz.o yarn.o

wdist32nl: $(SRC)
	g++ $(CFLAGS) -m32 -march=i686 $(SRC) -o wdist_linux_i686_nl -Wl,-Bstatic -L. $(ZLIB) -Wl,-Bdynamic $(LINKFLAGS)

wdist32d: $(SRC)
	g++ $(CFLAGS) -m32 -march=i686 $(SRC) -o wdist_linux_i686 -Wl,-Bstatic  -L. $(ZLIB) -Wl,-Bdynamic -L. /usr/lib/atlas/liblapack.so.3 -L. /usr/lib/atlas/libcblas.so.3 -L. /usr/lib/atlas/libatlas.so.3 $(LINKFLAGS)

wdistw: $(SRC)
	g++ $(CFLAGS) $(SRC) -c
	gfortran $(OBJ) -o wdist $(BLASFLAGS) $(LINKFLAGS) -L. $(ZLIB)

wdist64s: $(SRC)
	g++ $(CFLAGS) $(SRC) -o wdist_linux_x86_64_static -Wl,-Bstatic -L/usr/lib64 -llapack -lblas -lcblas -latlas -lgfortran -lquadmath -static-libgcc -static-libstdc++ -L. $(ZLIB64) -Wl,-Bdynamic $(LINKFLAGS)

wdist64d: $(SRC)
	g++ $(CFLAGS) $(SRC) -o wdist_linux_x86_64 -Wl,-Bstatic -L. $(ZLIB64) -Wl,-Bdynamic $(BLASFLAGS) $(LINKFLAGS)

wdist64w: $(SRC)
	g++ $(CFLAGS) $(ARCH64) $(SRC) -c
	gfortran $(OBJ) -o wdist64 $(BLASFLAGS64) $(LINKFLAGS) -L. $(ZLIB64)

deadapter: deadapter.c pigz.c yarn.c
	g++ -Wall -O2 deadapter.c pigz.c yarn.c -o deadapter -L. -Wl,-Bstatic -L. $(ZLIB64) -Wl,-Bdynamic -lpthread